a timeline is created when more than one move ends on the same board

`current_board` view
`available_moves` view -- hmm.  maybe this is also useful in validation

`moves` constraints:
check not all from=to
check ((from_turn % 2) = (to_turn % 2))
current_player = ((from_turn % 2) * 2) - 1
check (prev_timeline is not null || (from_timeline = 0))
check (both_from_and_to_timeline are within the set of available timeliens)
check player moving own piece?
check in bounds? FK to board definition

indexes
  ptl, ptn, px, py (unique?) FK
  ttl,ttn,tx,ty


knight movement definitions
pawn movement definitions

big piece switch statement with movement mechanic defintions?  joins of some sort?  left join after left join?
dynamic and/or normalized movement defintions?


more on `moves` constraints:
you have to actually move
you can only capture the enemy's pieces
any linear movement stops as soon as it encounters another piece
any linear movement stops if it hits an edge of a board
any linear movement through time or timelines stops if there's no board, a gap
knights can jump over gaps
any given board cannot be moved from twice -- unless castling
the move has to actually make sense for the given piece
the move has to make sense at the clock time it's made;  all moves have to form an accumulably-correct state
if a move is made, it must be from a position previously moved to or from the starting position
a timeline is created when moving to a board which has already been moved to
timelines stack according to their creator
moves alternate between pieces of opposing color
pieces are removed when taken
moving between boards uses up the moves of both
if one is in check, one cannot move a piece except to leave check
one cannot move a piece such that one enters oneself into check
pawns move one square forward in the direction of their color
pawns can move two squares on initial movement
pawns must move diagonally to capture
pawns can only move diagonally when capturing
pawns can en-passant each other
castling can only happen if neither piece has moved
castling can only happen if there are not pieces between the two
castling cannot happen in check
when castling, the king moves 2 squares
pawn promotion

observations:
there are no cycles.  This could be handy.
everything is finite

TODO: determine which rules are appropriate to bake into the `moves` constraints and which will have to lie elsewhere
